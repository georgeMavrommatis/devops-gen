<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<configuration xmlns="urn:activemq" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">
   <core xmlns="urn:activemq:core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:activemq:core ">

         <name>broker_2</name>

        <large-messages-directory>./data/large-messages</large-messages-directory>
        <persistence-enabled>true</persistence-enabled>
        <journal-type>ASYNCIO</journal-type>
        <paging-directory>data/paging</paging-directory>
        <bindings-directory>data/bindings</bindings-directory>
        <journal-directory>data/journal</journal-directory>
        <journal-datasync>true</journal-datasync>
        <journal-min-files>2</journal-min-files>
        <journal-pool-files>10</journal-pool-files>
        <journal-file-size>10M</journal-file-size>
        <journal-buffer-timeout>16000</journal-buffer-timeout>
        <journal-max-io>4096</journal-max-io>
        <disk-scan-period>5000</disk-scan-period>
        <max-disk-usage>90</max-disk-usage>
        <critical-analyzer>true</critical-analyzer>
        <critical-analyzer-timeout>120000</critical-analyzer-timeout>
        <critical-analyzer-check-period>60000</critical-analyzer-check-period>
        <critical-analyzer-policy>HALT</critical-analyzer-policy>
      
        <acceptors>
            <acceptor name="artemis">tcp://0.0.0.0:61616?tcpSendBufferSize=1048576;tcpReceiveBufferSize=1048576;protocols=CORE,AMQP,STOMP,HORNETQ,MQTT,OPENWIRE;useEpoll=true;amqpCredits=1000;amqpLowCredits=300</acceptor>
             <acceptor name="stomp">tcp://0.0.0.0:61613?tcpSendBufferSize=1048576;tcpReceiveBufferSize=1048576;protocols=STOMP;useEpoll=true</acceptor>
        </acceptors>


      <security-settings>
         <security-setting match="#">
            <permission type="createNonDurableQueue" roles="amq"/>
            <permission type="deleteNonDurableQueue" roles="amq"/>
            <permission type="createDurableQueue" roles="amq"/>
            <permission type="deleteDurableQueue" roles="amq"/>
            <permission type="createAddress" roles="amq"/>
            <permission type="deleteAddress" roles="amq"/>
            <permission type="consume" roles="amq"/>
            <permission type="browse" roles="amq"/>
            <permission type="send" roles="amq"/>
            <!-- we need this otherwise ./artemis data imp wouldn't work -->
            <permission type="manage" roles="amq"/>
         </security-setting>
      </security-settings>

         <addresses>
           <address name="gr.generali.testing.general.queue">
             <anycast>
                <queue name="gr.generali.testing.general.queue"/>
             </anycast>
           </address>
         </addresses>
         
       <address-settings>
          <address-setting match="gr.generali.#">
            <management-message-attribute-size-limit>-1</management-message-attribute-size-limit>
            <auto-create-addresses>true</auto-create-addresses>
            <default-address-routing-type>ANYCAST</default-address-routing-type>
            <max-delivery-attempts>20</max-delivery-attempts>
            <redelivery-delay-multiplier>1.5</redelivery-delay-multiplier>
            <redelivery-delay>5000</redelivery-delay>
            <auto-create-queues>true</auto-create-queues>
            <auto-create-jms-queues>true</auto-create-jms-queues>
            <auto-create-jms-topics>true</auto-create-jms-topics>
         </address-setting>
       </address-settings>   
          
      <!--   <ha-policy>
            <replication>              
               <slave>
                     <allow-failback>true</allow-failback>
                     <initial-replication-sync-timeout>90000</initial-replication-sync-timeout>
                     <max-saved-replicated-journals-size>0</max-saved-replicated-journals-size>
               </slave>
            </replication>
         </ha-policy>
      -->

      <!-- HA configuration 
      <ha-policy>
         <shared-store>
            <colocated>
               <backup-port-offset>100</backup-port-offset>
               <backup-request-retries>-1</backup-request-retries>
               <backup-request-retry-interval>2000</backup-request-retry-interval>
               <max-backups>1</max-backups>
               <request-backup>true</request-backup>
               <master/>
               <slave>
                  <scale-down/>
               </slave>
            </colocated>
         </shared-store>
      </ha-policy>
      -->
      
      <ha-policy>
         <replication>
            <colocated>
               <backup-request-retries>44</backup-request-retries>
               <backup-request-retry-interval>33</backup-request-retry-interval>
               <max-backups>3</max-backups>
               <request-backup>false</request-backup>
               <backup-port-offset>33</backup-port-offset>
               <master>
                  <group-name>purple</group-name>
                  <check-for-live-server>true</check-for-live-server>
                  <cluster-name>generali_messages</cluster-name>
               </master>
               <slave>
                  <group-name>blue</group-name>
                  <max-saved-replicated-journals-size>22</max-saved-replicated-journals-size>
                  <cluster-name>generali_messages</cluster-name>
                  <restart-backup>false</restart-backup>
                  <scale-down>
                     <!--a grouping of servers that can be scaled down to-->
                     <group-name>generali_group</group-name>
                     <!--either a discovery group-->
                     <discovery-group-ref discovery-group-name="generali_group"/>
                  </scale-down>
               </slave>
            </colocated>
         </replication>
      </ha-policy>      

        <!-- Connectors -->
        <connectors>
           <connector name="netty-connector">tcp://sw-prd-queue-mgr02.generalihellas.gr:61616</connector>
           <!-- connector to the server0 -->
           <connector name="server1-connector">tcp://sw-prd-queue-mgr01.generalihellas.gr:61616</connector>
        </connectors>


         <cluster-connections>
            <cluster-connection name="gr.generali.testing.general.queue">
               <connector-ref>netty-connector</connector-ref>
               <retry-interval>500</retry-interval>
               <use-duplicate-detection>true</use-duplicate-detection>
               <message-load-balancing>STRICT</message-load-balancing>
               <max-hops>1</max-hops>
               <static-connectors allow-direct-connections-only="true">
                  <connector-ref>server1-connector</connector-ref>
               </static-connectors>
            </cluster-connection>
         </cluster-connections>
         
         <!-- Other config -->
         


      </core>

   </configuration>