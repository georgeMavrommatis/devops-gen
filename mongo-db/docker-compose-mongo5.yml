version: '3.8'
services:

  mongodb1:
    image: sw-nexus:9001/mongo5_replicadb1:1.0.0
    command: /usr/bin/mongod --config /data/admin/config.yml
    environment:
      - MONGO_USER_ADMIN=adminGenerali
      - MONGO_PASS_ADMIN=adminGeneraliPass
      - MONGO_REPLICA_ADMIN=replicaAdminGenerali
      - MONGO_PASS_REPLICA=replicaAdminGeneraliPass
      - MONGO_INITDB_DATABASE=admin
    deploy:
      #      restart_policy:
      #        condition: none
      placement:
        constraints:
          - node.platform.os == linux
          - node.role == worker
          - node.labels.type == Swarm-Mongo1-Prd
      resources:
        limits:
          cpus: '0.90'
          memory: 3G
        reservations:
          cpus: '0.90'
          memory: 3G
    ports:
      - 30001:30001
    networks:
      - alphanetwork
    volumes:
      - type: volume
        source: mongodb1_data
        target: /data/db/
      - type: volume
        source: mongodb1_configdb
        target: /data/config/
      - /opt/docker-volumes/nfs/mongo5/security/mongo-repl.key:/etc/mongo-repl.key:ro

  mongodb2:
    image: sw-nexus:9001/mongo5_replicadb2:1.0.0
    command: /usr/bin/mongod --config /data/admin/config.yml
    environment:
      - MONGO_USER_ADMIN=adminGenerali
      - MONGO_PASS_ADMIN=adminGeneraliPass
      - MONGO_REPLICA_ADMIN=replicaAdminGenerali
      - MONGO_PASS_REPLICA=replicaAdminGeneraliPass
      - MONGO_INITDB_DATABASE=admin
    deploy:
      #      restart_policy:
      #        condition: none
      placement:
        constraints:
          - node.platform.os == linux
          - node.role == worker
          - node.labels.type == Swarm-Mongo2-Prd
      resources:
        limits:
          cpus: '0.90'
          memory: 3G
        reservations:
          cpus: '0.90'
          memory: 3G
    ports:
      - 30002:30002
    networks:
      - alphanetwork
    volumes:
      - type: volume
        source: mongodb2_data
        target: /data/db/
      - type: volume
        source: mongodb2_configdb
        target: /data/config/
      - /opt/docker-volumes/nfs/mongo5/security/mongo-repl.key:/etc/mongo-repl.key

  mongodb_arbiter:
    image: sw-nexus:9001/mongo5_arbiter:1.0.0
    command: /usr/bin/mongod --config /data/admin/confArbiter.yml
    deploy:
      placement:
        constraints:
          - node.platform.os == linux
          - node.role == worker
          - node.labels.type == Swarm-Mongo-Arb-Prd
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 20M
    ports:
      - 30003:30003
    networks:
      - alphanetwork
    volumes:
      - type: volume
        source: mongodb_arb_data
        target: /data/arb/
      - type: volume
        source: mongodb_arb_configdb
        target: /data/config/
      - /opt/docker-volumes/nfs/mongo5/security/mongo-repl.key:/etc/mongo-repl.key

  haproxy:
    image: haproxy:2.7
    deploy:
      placement:
        constraints:
          - node.platform.os == linux
          - node.role == worker
          - node.labels.type == proxy
    networks:
      - alphanetwork
    ports:
      #      - 48161:48161
      #      - 48162:48162
      - 40001:40001
      - 40002:40002
      - 40003:40003
    #      Add more ports for load balancing
    volumes:
      #      save  haproxy.cfg at /opt/haproxy/ host machine, in case of multiple workers, nfs must be implemented.
      - /opt/haproxy/:/usr/local/etc/haproxy/:ro

networks:
  alphanetwork:
    driver: overlay
    attachable: true

volumes:
  mongodb1_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/docker-volumes/nfs/mongo5/mongodb1/data/db/

  mongodb1_configdb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/docker-volumes/nfs/mongo5/mongodb1/data/configdb/

  mongodb2_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/docker-volumes/nfs/mongo5/mongodb2/data/db/

  mongodb2_configdb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/docker-volumes/nfs/mongo5/mongodb2/data/configdb/

  mongodb_arb_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/docker-volumes/nfs/mongo5/arbiter/data/arb/

  mongodb_arb_configdb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /opt/docker-volumes/nfs/mongo5/arbiter/data/configdb/